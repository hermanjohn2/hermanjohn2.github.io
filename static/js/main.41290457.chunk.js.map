{"version":3,"sources":["components/Navigation/index.js","pages/Home/index.js","pages/Contact/index.js","components/ProjectCard/index.js","pages/Projects/index.js","components/AssignmentCard/index.js","pages/Assignments/index.js","pages/AboutMe/index.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","Link","aboutMeData","gitHubUrl","target","linkedInUrl","Home","Container","Row","Col","md","Contact","Card","Body","name","location","email","contactNumber","onClick","openPopupWidget","url","Img","src","avatarUrl","ProjectCard","data","deployedLink","img","Title","Text","description","githubLink","rel","Projects","projectData","map","project","key","AssignmentCard","Assignments","assignmentData","assignment","AboutMe","CardDeck","brandStatement","resumePdf","languages","lang","databases","db","frameworks","framework","methods","method","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.41290457.chunk.js","sourcesContent":["import React from 'react';\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nimport aboutMeData from '../../db/aboutMe.json';\nimport './style.css';\n\nconst Navigation = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n\t\t\t\t<Navbar.Brand href=\"#home\">John Herman | Developer</Navbar.Brand>\n\t\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n\t\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\n\t\t\t\t\t<Nav className=\"mr-auto\">\n\t\t\t\t\t\t<NavDropdown title=\"Portfolio\" id=\"collapsible-nav-dropdown\">\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#projects\">Projects</NavDropdown.Item>\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#assignments\">\n\t\t\t\t\t\t\t\tExamples of Code\n\t\t\t\t\t\t\t</NavDropdown.Item>\n\t\t\t\t\t\t</NavDropdown>\n\t\t\t\t\t\t<Nav.Link href=\"#contact\">Contact</Nav.Link>\n\t\t\t\t\t\t<Nav.Link href=\"#about\">About Me</Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t\t<Nav>\n\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\thref={aboutMeData[0].gitHubUrl}\n\t\t\t\t\t\t\tclassName=\"fa fa-github active\"\n\t\t\t\t\t\t\ttarget=\"_blank\"></Nav.Link>\n\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\thref={aboutMeData[0].linkedInUrl}\n\t\t\t\t\t\t\tclassName=\"fa fa-linkedin active\"\n\t\t\t\t\t\t\ttarget=\"_blank\"></Nav.Link>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Navbar.Collapse>\n\t\t\t</Navbar>\n\t\t</div>\n\t);\n};\n\nexport default Navigation;\n","import React from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Navigation from '../../components/Navigation';\n\nconst Home = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Navigation />\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={12}>\n\t\t\t\t\t\t<h1 className=\"headline my-5 mx-2\">\n\t\t\t\t\t\t\tHi, <br />\n\t\t\t\t\t\t\tI'm John. <br />A web\n\t\t\t\t\t\t\tdeveloper.\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport { openPopupWidget } from 'react-calendly';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport './style.css';\nimport aboutMeData from '../../db/aboutMe.json';\n\nimport Navigation from '../../components/Navigation';\n\nconst Contact = () => {\n\tconst url = 'https://calendly.com/john-herman-dev/60min';\n\n\treturn (\n\t\t<div>\n\t\t\t<Navigation />\n\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md={12}>\n\t\t\t\t\t\t<h1 className=\"headline my-3 text-center\">Let's Build Together</h1>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\n\t\t\t<Card className=\"contact-card shadow-lg rounded\">\n\t\t\t\t<Row className=\"no-gutters\">\n\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<h2>{aboutMeData[0].name}</h2>\n\t\t\t\t\t\t\t<h2>{aboutMeData[0].location}</h2>\n\t\t\t\t\t\t\t<h2>{aboutMeData[0].email}</h2>\n\t\t\t\t\t\t\t<h2>{aboutMeData[0].contactNumber}</h2>\n\n\t\t\t\t\t\t\t<h2 className=\"link\" onClick={() => openPopupWidget({ url })}>\n\t\t\t\t\t\t\t\tSchedule a Meeting\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col variant=\"top\" className=\"pt-3\" md={4}>\n\t\t\t\t\t\t<Card.Img\n\t\t\t\t\t\t\tclassName=\"headshot shadow-lg\"\n\t\t\t\t\t\t\tsrc={aboutMeData[0].avatarUrl}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default Contact;\n","import React from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nconst ProjectCard = ({ data }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Card className=\"shadow-lg p-5 m-5 rounded\">\n\t\t\t\t<Row className=\"no-gutters\">\n\t\t\t\t\t<Col className=\"pt-3\" md={4}>\n\t\t\t\t\t\t<Card.Link\n\t\t\t\t\t\t\thref={data.deployedLink}\n\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t<Card.Img\n\t\t\t\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\t\t\t\tsrc={data.img}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Link\n\t\t\t\t\t\t\t\tclassName=\"link\"\n\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\tdata.deployedLink\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdata.title\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t</Card.Link>\n\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdata.description\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Card.Link\n\t\t\t\t\t\t\t\t\tclassName=\"link\"\n\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\tdata.githubLink\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t\t\t\tRepository\n\t\t\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default ProjectCard;\n","import React from 'react';\n\nimport Navigation from '../../components/Navigation';\nimport ProjectCard from '../../components/ProjectCard';\n\nimport projectData from '../../db/projects.json';\n\nconst Projects = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Navigation />\n\t\t\t<h1 className=\"headline my-3 text-center\">Projects</h1>\n\t\t\t{projectData.map(project => (\n\t\t\t\t<ProjectCard key={project.id} data={project} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Projects;\n","import React from 'react';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nconst AssignmentCard = ({ data }) => {\n\treturn (\n\t\t<div>\n\t\t\t<Card className=\"shadow-lg p-3 mx-5 my-2 rounded\">\n\t\t\t\t<Row className=\"no-gutters\">\n\t\t\t\t\t<Col className=\"pt-3\" md={4}>\n\t\t\t\t\t\t<Card.Link\n\t\t\t\t\t\t\thref={data.deployedLink}\n\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t<Card.Img\n\t\t\t\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\t\t\t\tsrc={data.img}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md={8}>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<Card.Link\n\t\t\t\t\t\t\t\tclassName=\"link\"\n\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\tdata.deployedLink\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdata.title\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t</Card.Link>\n\n\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tdata.description\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<Card.Link\n\t\t\t\t\t\t\t\t\tclassName=\"link\"\n\t\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\t\tdata.githubLink\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t\t\t\tRepository\n\t\t\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Card>\n\t\t</div>\n\t);\n};\n\nexport default AssignmentCard;\n","import React from 'react';\n\nimport Navigation from '../../components/Navigation';\nimport AssignmentCard from '../../components/AssignmentCard';\n\nimport assignmentData from '../../db/assignments.json';\n\nconst Assignments = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Navigation />\n\t\t\t<h1 className=\"headline my-3 text-center\">\n\t\t\t\tExamples of Code\n\t\t\t</h1>\n\t\t\t{assignmentData.map(assignment => (\n\t\t\t\t<AssignmentCard\n\t\t\t\t\tkey={assignment.id}\n\t\t\t\t\tdata={assignment}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Assignments;\n","import React from 'react';\n\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Card from 'react-bootstrap/Card';\n\nimport Navigation from '../../components/Navigation';\nimport aboutMeData from '../../db/aboutMe.json';\n\nimport './style.css';\n\nconst AboutMe = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Navigation />\n\n\t\t\t<h1 className=\"headline my-3 text-center\">\n\t\t\t\t{aboutMeData[0].name}\n\t\t\t</h1>\n\n\t\t\t<CardDeck className=\"pt-3 px-4\">\n\t\t\t\t<Card className=\"shadow-lg\">\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Title className=\"title\">\n\t\t\t\t\t\t\t{aboutMeData[0].title}\n\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t<Card.Text className=\"text\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\taboutMeData[0]\n\t\t\t\t\t\t\t\t\t.brandStatement\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<Card.Link\n\t\t\t\t\t\t\t\tclassName=\"link pro-materials-link\"\n\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\taboutMeData[0]\n\t\t\t\t\t\t\t\t\t\t.resumePdf\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t\t<br /> <br />\n\t\t\t\t\t\t\t\tResume\n\t\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t\t\t<Card.Link\n\t\t\t\t\t\t\t\tclassName=\"link pro-materials-link\"\n\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\taboutMeData[0]\n\t\t\t\t\t\t\t\t\t\t.gitHubUrl\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t\t\t<Card.Link\n\t\t\t\t\t\t\t\tclassName=\"link pro-materials-link\"\n\t\t\t\t\t\t\t\thref={\n\t\t\t\t\t\t\t\t\taboutMeData[0]\n\t\t\t\t\t\t\t\t\t\t.linkedInUrl\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttarget=\"_blank\">\n\t\t\t\t\t\t\t\tLinkedIn\n\t\t\t\t\t\t\t</Card.Link>\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t\t<Card className=\"shadow-lg\">\n\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t<Card.Title className=\"title\">\n\t\t\t\t\t\t\tLanguages\n\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t<Card.Text className=\"text\">\n\t\t\t\t\t\t\t{aboutMeData[0].languages.map(\n\t\t\t\t\t\t\t\tlang =>\n\t\t\t\t\t\t\t\t\tlang +\n\t\t\t\t\t\t\t\t\t' | '\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t<Card.Title className=\"title\">\n\t\t\t\t\t\t\tDatabases\n\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t<Card.Text className=\"text\">\n\t\t\t\t\t\t\t{aboutMeData[0].databases.map(\n\t\t\t\t\t\t\t\tdb => db + ' | '\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t<Card.Title className=\"title\">\n\t\t\t\t\t\t\tFrameworks\n\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t<Card.Text className=\"text\">\n\t\t\t\t\t\t\t{aboutMeData[0].frameworks.map(\n\t\t\t\t\t\t\t\tframework =>\n\t\t\t\t\t\t\t\t\tframework +\n\t\t\t\t\t\t\t\t\t' | '\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t<Card.Title className=\"title\">\n\t\t\t\t\t\t\tMethodologies\n\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t<Card.Text className=\"text\">\n\t\t\t\t\t\t\t{aboutMeData[0].methods.map(\n\t\t\t\t\t\t\t\tmethod =>\n\t\t\t\t\t\t\t\t\tmethod +\n\t\t\t\t\t\t\t\t\t' | '\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t</Card>\n\t\t\t</CardDeck>\n\t\t</div>\n\t);\n};\n\nexport default AboutMe;\n","import React from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Contact from './pages/Contact';\nimport Projects from './pages/Projects';\nimport Assignments from './pages/Assignments';\nimport AboutMe from './pages/AboutMe';\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<Route exact path={['/', '/home']} component={Home} />\n\t\t\t<Route exact path=\"/contact\" component={Contact} />\n\t\t\t<Route exact path=\"/projects\" component={Projects} />\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath=\"/assignments\"\n\t\t\t\tcomponent={Assignments}\n\t\t\t/>\n\t\t\t<Route exact path=\"/about\" component={AboutMe} />\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}